apiVersion: v1
kind: Service
metadata:
  name: parameter-registry
  labels:
    app: parameter-registry
    component: ml-ops
spec:
  selector:
    app: parameter-registry
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
    name: http
  - port: 9100
    targetPort: 9100
    protocol: TCP
    name: metrics
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: parameter-registry-service
  labels:
    app: parameter-registry
    component: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: parameter-registry
    component: api
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: grpc
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: parameter-registry-internal
  labels:
    app: parameter-registry
    component: internal
spec:
  selector:
    app: parameter-registry
    component: api
  ports:
  - name: optimizer-api
    port: 5000
    targetPort: 5000
    protocol: TCP
  clusterIP: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: parameter-registry-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - api.parameters.${DOMAIN_NAME}
    secretName: parameter-registry-tls
  rules:
  - host: api.parameters.${DOMAIN_NAME}
    http:
      paths:
      - path: /api(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: parameter-registry-service
            port:
              name: http
