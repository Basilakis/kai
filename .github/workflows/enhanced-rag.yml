name: Enhanced RAG CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'packages/ml/python/**'
      - 'Dockerfile.continuous-learning'
      - 'requirements-rag.txt'
      - '.github/workflows/enhanced-rag.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'packages/ml/python/**'
      - 'Dockerfile.continuous-learning'
      - 'requirements-rag.txt'
      - '.github/workflows/enhanced-rag.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-rag.txt
          pip install pytest pytest-asyncio
      
      - name: Run tests
        run: |
          cd packages/ml/python
          pytest test_integration.py
  
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Continuous Learning Service
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.continuous-learning
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/continuous-learning:latest,${{ secrets.DOCKER_REGISTRY }}/continuous-learning:${{ github.sha }}
      
      - name: Update MCP Server Image
        run: |
          # This step would update your existing MCP server image build process
          # to include the enhanced RAG system components
          echo "Updating MCP server image to include enhanced RAG system"
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
      
      - name: Set up Kubernetes config
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
      
      - name: Update image tags
        run: |
          sed -i "s|\${DOCKER_REGISTRY}|${{ secrets.DOCKER_REGISTRY }}|g" kubernetes/continuous-learning-deployment.yaml
          sed -i "s|\${IMAGE_TAG}|${{ github.sha }}|g" kubernetes/continuous-learning-deployment.yaml
      
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/continuous-learning-deployment.yaml
      
      - name: Verify deployment
        run: |
          kubectl rollout status deployment/continuous-learning
