name: KAI Platform CI/CD Pipeline

on:
  push:
    branches: [main, staging, development]
  pull_request:
    branches: [main, staging, development]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      create_cluster:
        description: 'Create new cluster if not exists'
        type: boolean
        default: false

# Environment variables are loaded from the .env file in the root directory
# For sensitive information, use GitHub Secrets instead
# The following secrets are expected to be configured in the repository:
# - GITHUB_TOKEN: GitHub token for GitHub Container Registry
# - DIGITALOCEAN_ACCESS_TOKEN: Digital Ocean API token
# - CLUSTER_NAME: Base name for Kubernetes cluster (e.g., "kai")
# - DO_REGION: Digital Ocean region (e.g., "ams3")
# - KUBE_CONFIG_DATA: Base64-encoded Kubernetes config (if not using DO provisioning)
# - DOMAIN_NAME: Domain name for the application (e.g., "kai-platform.com")
# - ADMIN_EMAIL: Email for SSL certificate notifications
# - MONGODB_URI: MongoDB connection string
# - JWT_SECRET: Secret for JWT tokens
# - OPENAI_API_KEY: OpenAI API key
# - REDIS_PASSWORD: Password for Redis
# - SUPABASE_URL_PRODUCTION, SUPABASE_KEY_PRODUCTION, SUPABASE_ANON_KEY_PRODUCTION: Supabase production credentials
# - SUPABASE_URL_STAGING, SUPABASE_KEY_STAGING, SUPABASE_ANON_KEY_STAGING: Supabase staging credentials
# - STRIPE_SECRET_KEY, STRIPE_PUBLISHABLE_KEY: Stripe payment credentials (optional)
# - SLACK_WEBHOOK: Slack notification webhook URL

jobs:
  # Build and test job - reusable workflow
  build-and-test:
    name: Build and Test
    uses: ./.github/workflows/build-test.yml
    with:
      node-version: '20'
      python-version: '3.9'

  # Build Docker images - reusable workflow
  build-docker-images:
    name: Build Docker Images
    needs: build-and-test
    if: |
      (github.ref == 'refs/heads/staging') ||
      (github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch')
    uses: ./.github/workflows/docker-build.yml
    with:
      environment: ${{ github.ref == 'refs/heads/main' || github.event.inputs.environment == 'production' && 'production' || 'staging' }}
      tag-suffix: ${{ github.ref == 'refs/heads/main' || github.event.inputs.environment == 'production' && 'latest' || 'staging' }}
    secrets:
      github_access_token: ${{ secrets.GITHUB_TOKEN }}
      github_repository: ${{ github.repository }}

  # Provision infrastructure if needed
  provision-infrastructure-staging:
    name: Provision Staging Infrastructure
    needs: build-docker-images
    if: |
      (github.ref == 'refs/heads/staging') ||
      (github.event.inputs.environment == 'staging')
    uses: ./.github/workflows/provision-infrastructure.yml
    with:
      environment: 'staging'
      create_cluster: ${{ github.event.inputs.create_cluster }}
    secrets:
      digitalocean_token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      cluster_name: ${{ secrets.CLUSTER_NAME }}
      do_region: ${{ secrets.DO_REGION }}

  provision-infrastructure-production:
    name: Provision Production Infrastructure
    needs: build-docker-images
    if: |
      (github.ref == 'refs/heads/main') ||
      (github.event.inputs.environment == 'production')
    uses: ./.github/workflows/provision-infrastructure.yml
    with:
      environment: 'production'
      create_cluster: ${{ github.event.inputs.create_cluster }}
    secrets:
      digitalocean_token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      cluster_name: ${{ secrets.CLUSTER_NAME }}
      do_region: ${{ secrets.DO_REGION }}

  # Setup Kubernetes infrastructure
  setup-kubernetes-staging:
    name: Setup Staging Kubernetes
    needs: provision-infrastructure-staging
    if: |
      (github.ref == 'refs/heads/staging') ||
      (github.event.inputs.environment == 'staging')
    uses: ./.github/workflows/setup-kubernetes.yml
    with:
      environment: 'staging'
      domain: 'staging.${{ secrets.DOMAIN_NAME }}'
    secrets:
      admin_email: ${{ secrets.ADMIN_EMAIL }}
      mongodb_uri: ${{ secrets.MONGODB_URI }}
      jwt_secret: ${{ secrets.JWT_SECRET }}
      openai_api_key: ${{ secrets.OPENAI_API_KEY }}
      supabase_url: ${{ secrets.SUPABASE_URL_STAGING }}
      supabase_key: ${{ secrets.SUPABASE_KEY_STAGING }}
      supabase_anon_key: ${{ secrets.SUPABASE_ANON_KEY_STAGING }}
      redis_password: ${{ secrets.REDIS_PASSWORD }}
      stripe_secret_key: ${{ secrets.STRIPE_SECRET_KEY }}
      stripe_publishable_key: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}

  setup-kubernetes-production:
    name: Setup Production Kubernetes
    needs: provision-infrastructure-production
    if: |
      (github.ref == 'refs/heads/main') ||
      (github.event.inputs.environment == 'production')
    uses: ./.github/workflows/setup-kubernetes.yml
    with:
      environment: 'production'
      domain: ${{ secrets.DOMAIN_NAME }}
    secrets:
      admin_email: ${{ secrets.ADMIN_EMAIL }}
      mongodb_uri: ${{ secrets.MONGODB_URI }}
      jwt_secret: ${{ secrets.JWT_SECRET }}
      openai_api_key: ${{ secrets.OPENAI_API_KEY }}
      supabase_url: ${{ secrets.SUPABASE_URL_PRODUCTION }}
      supabase_key: ${{ secrets.SUPABASE_KEY_PRODUCTION }}
      supabase_anon_key: ${{ secrets.SUPABASE_ANON_KEY_PRODUCTION }}
      redis_password: ${{ secrets.REDIS_PASSWORD }}
      stripe_secret_key: ${{ secrets.STRIPE_SECRET_KEY }}
      stripe_publishable_key: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}

  # Deploy application to Kubernetes
  deploy-application-staging:
    name: Deploy to Staging
    needs: setup-kubernetes-staging
    if: |
      (github.ref == 'refs/heads/staging') ||
      (github.event.inputs.environment == 'staging')
    uses: ./.github/workflows/deploy-application.yml
    with:
      environment: 'staging'
      domain: 'staging.${{ secrets.DOMAIN_NAME }}'
      sha: ${{ github.sha }}
    secrets:
      github_access_token: ${{ secrets.GITHUB_TOKEN }}
      github_repository: ${{ secrets.GITHUB_REPOSITORY || github.repository }}
      slack_webhook: ${{ secrets.SLACK_WEBHOOK }}

  deploy-application-production:
    name: Deploy to Production
    needs: setup-kubernetes-production
    if: |
      (github.ref == 'refs/heads/main') ||
      (github.event.inputs.environment == 'production')
    uses: ./.github/workflows/deploy-application.yml
    with:
      environment: 'production'
      domain: ${{ secrets.DOMAIN_NAME }}
      sha: ${{ github.sha }}
    secrets:
      github_access_token: ${{ secrets.GITHUB_TOKEN }}
      github_repository: ${{ secrets.GITHUB_REPOSITORY || github.repository }}
      slack_webhook: ${{ secrets.SLACK_WEBHOOK }}


  # Verify deployment
  verify-deployment-staging:
    name: Verify Staging Deployment
    needs: [deploy-application-staging, deploy-frontend-staging]
    if: |
      (github.ref == 'refs/heads/staging') ||
      (github.event.inputs.environment == 'staging')
    uses: ./.github/workflows/verify-deployment.yml
    with:
      environment: 'staging'
      domain: 'staging.${{ secrets.DOMAIN_NAME }}'
    secrets:
      slack_webhook: ${{ secrets.SLACK_WEBHOOK }}

  verify-deployment-production:
    name: Verify Production Deployment
    needs: [deploy-application-production, deploy-frontend-production]
    if: |
      (github.ref == 'refs/heads/main') ||
      (github.event.inputs.environment == 'production')
    uses: ./.github/workflows/verify-deployment.yml
    with:
      environment: 'production'
      domain: ${{ secrets.DOMAIN_NAME }}
    secrets:
      slack_webhook: ${{ secrets.SLACK_WEBHOOK }}