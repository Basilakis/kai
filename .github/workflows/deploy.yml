name: Kai Platform CI/CD Pipeline

on:
  push:
    branches: [main, staging, development]
  pull_request:
    branches: [main, staging, development]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

# The following secrets are expected to be configured in the repository:
# - DOCKER_USERNAME, DOCKER_PASSWORD, DOCKER_REGISTRY: Docker registry credentials
# - GITOPS_PAT: Personal Access Token for GitOps repository
# - KUBE_CONFIG_DATA: Base64-encoded Kubernetes config
# - SUPABASE_URL_PRODUCTION, SUPABASE_KEY_PRODUCTION: Supabase production credentials
# - SUPABASE_URL_STAGING, SUPABASE_KEY_STAGING: Supabase staging credentials
# - VERCEL_TOKEN, VERCEL_ORG_ID: Vercel credentials
# - VERCEL_PROJECT_ID_CLIENT, VERCEL_PROJECT_ID_ADMIN: Vercel project IDs
# - SLACK_WEBHOOK: Slack notification webhook URL

jobs:
  # Build and test job - reusable workflow
  build-and-test:
    name: Build and Test
    uses: ./.github/workflows/build-test.yml
    with:
      node-version: '16'
      python-version: '3.9'

  # Build Docker images - reusable workflow
  build-docker-images:
    name: Build Docker Images
    needs: build-and-test
    if: |
      (github.ref == 'refs/heads/staging') ||
      (github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch')
    uses: ./.github/workflows/docker-build.yml
    with:
      environment: ${{ github.ref == 'refs/heads/main' || github.event.inputs.environment == 'production' && 'production' || 'staging' }}
      tag-suffix: ${{ github.ref == 'refs/heads/main' || github.event.inputs.environment == 'production' && 'latest' || 'staging' }}
    secrets:
      docker_username: ${{ secrets.DOCKER_USERNAME }}
      docker_password: ${{ secrets.DOCKER_PASSWORD }}
      docker_registry: ${{ secrets.DOCKER_REGISTRY }}

  # Deploy to staging
  deploy-staging:
    name: Deploy to Staging
    needs: build-docker-images
    if: |
      (github.ref == 'refs/heads/staging') ||
      (github.event.inputs.environment == 'staging')
    uses: ./.github/workflows/deploy-staging.yml
    with:
      sha: ${{ github.sha }}
      kube-context: 'kai-staging-cluster'
      api-url: 'https://api-staging.kai.yourdomain.com'
    secrets:
      gitops_pat: ${{ secrets.GITOPS_PAT }}
      supabase_url: ${{ secrets.SUPABASE_URL_STAGING }}
      supabase_key: ${{ secrets.SUPABASE_KEY_STAGING }}
      vercel_token: ${{ secrets.VERCEL_TOKEN }}
      vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
      vercel_project_id_client: ${{ secrets.VERCEL_PROJECT_ID_CLIENT }}
      vercel_project_id_admin: ${{ secrets.VERCEL_PROJECT_ID_ADMIN }}

  # Deploy to production
  deploy-production:
    name: Deploy to Production
    needs: build-docker-images
    if: |
      (github.ref == 'refs/heads/main') ||
      (github.event.inputs.environment == 'production')
    uses: ./.github/workflows/deploy-production.yml
    with:
      sha: ${{ github.sha }}
      kube-context: 'kai-production-cluster'
      api-url: 'https://api.kai.yourdomain.com'
    secrets:
      gitops_pat: ${{ secrets.GITOPS_PAT }}
      supabase_url: ${{ secrets.SUPABASE_URL_PRODUCTION }}
      supabase_key: ${{ secrets.SUPABASE_KEY_PRODUCTION }}
      vercel_token: ${{ secrets.VERCEL_TOKEN }}
      vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
      vercel_project_id_client: ${{ secrets.VERCEL_PROJECT_ID_CLIENT }}
      vercel_project_id_admin: ${{ secrets.VERCEL_PROJECT_ID_ADMIN }}