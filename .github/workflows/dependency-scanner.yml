name: Dependency Scanner

on:
  schedule:
    # Run weekly on Monday at 1:00 AM UTC
    - cron: '0 1 * * 1'
  workflow_dispatch:
    inputs:
      scan-type:
        description: 'Type of dependencies to scan'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - node
          - python

jobs:
  scan-node-dependencies:
    name: Scan Node Dependencies
    if: ${{ github.event.inputs.scan-type == 'all' || github.event.inputs.scan-type == 'node' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check for outdated packages
        id: outdated
        run: |
          echo "::set-output name=outdated::$(yarn outdated --json | jq -c '.')"
          
      - name: Parse outdated packages
        id: parse-outdated
        run: |
          echo '${{ steps.outdated.outputs.outdated }}' > outdated.json
          node .github/scripts/parse-outdated.js
        
      - name: Create outdated packages report
        uses: actions/upload-artifact@v3
        with:
          name: node-outdated-packages-report
          path: outdated-report.json
          retention-days: 7

  scan-python-dependencies:
    name: Scan Python Dependencies
    if: ${{ github.event.inputs.scan-type == 'all' || github.event.inputs.scan-type == 'python' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install pip-tools
        run: pip install pip-tools

      - name: Check ML package requirements
        run: |
          cd packages/ml
          pip install -r requirements.txt
          pip list --outdated --format=json > python-outdated.json
          
      - name: Check RAG requirements
        run: |
          pip install -r requirements-rag.txt
          pip list --outdated --format=json > rag-outdated.json
          
      - name: Combine Python outdated reports
        run: |
          python .github/scripts/combine-python-outdated.py
          
      - name: Create outdated packages report
        uses: actions/upload-artifact@v3
        with:
          name: python-outdated-packages-report
          path: python-outdated-report.json
          retention-days: 7
          
  analyze-compatibility:
    name: Analyze Update Compatibility
    needs: [scan-node-dependencies, scan-python-dependencies]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Download Node outdated report
        uses: actions/download-artifact@v3
        with:
          name: node-outdated-packages-report
          
      - name: Download Python outdated report
        uses: actions/download-artifact@v3
        with:
          name: python-outdated-packages-report
          
      - name: Install AI SDK
        run: npm install @azure/openai
        
      - name: Run compatibility analysis
        run: node .github/scripts/analyze-compatibility.js
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          
      - name: Create compatibility report
        uses: actions/upload-artifact@v3
        with:
          name: compatibility-report
          path: compatibility-report.json
          retention-days: 7
          
  create-update-prs:
    name: Create PRs for Safe Updates
    needs: analyze-compatibility
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Download compatibility report
        uses: actions/download-artifact@v3
        with:
          name: compatibility-report
          
      - name: Create update PRs
        run: node .github/scripts/create-update-prs.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}