name: Update Documentation

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  update-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kai repository
        uses: actions/checkout@v4
        with:
          path: kai

      - name: Checkout basilakis.github.io repository
        uses: actions/checkout@v4
        with:
          repository: Basilakis/basilakis.github.io
          token: ${{ secrets.DOCS_DEPLOY_TOKEN }}
          path: basilakis.github.io

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          npm install -g fs-extra

      - name: Process readme files
        run: |
          cd kai/readme
          echo "Current directory: $(pwd)"
          echo "Contents of current directory:"
          ls -la
          echo "Running process-readme-files.js..."
          
          # Modify the script to output to the basilakis.github.io repository
          sed -i 's|const destDir = '\''../kai-docs-temp/docs'\''|const destDir = '\''../../basilakis.github.io/docs'\''|g' process-readme-files.js
          sed -i 's|const categoriesFile = '\''../kai-docs-temp/categories.json'\''|const categoriesFile = '\''../../basilakis.github.io/categories.json'\''|g' process-readme-files.js
          sed -i 's|fs.writeFileSync('\''../kai-docs-temp/sidebars.js'\''|fs.writeFileSync('\''../../basilakis.github.io/sidebars.js'\''|g' process-readme-files.js
          
          # Run the script
          node process-readme-files.js
          
          echo "Process complete. Contents of basilakis.github.io/docs:"
          ls -la ../../basilakis.github.io/docs

      - name: Create prompt-library.md file
        run: |
          mkdir -p basilakis.github.io/docs/prompts
          
          # Create prompt-library.md file
          cat > basilakis.github.io/docs/prompt-library.md << 'EOF'
---
id: prompt-library
title: "Prompt Library"
sidebar_label: "Prompt Library"
---

# Prompt Library

The Prompt Library is a centralized repository for managing, organizing, and sharing prompts across the KAI platform.

## Features

- **Public/Private Settings**: Control who can access your prompts
- **Categories**: Organize prompts by purpose, domain, or any other classification
- **Usage Types**: Define how prompts can be used (e.g., text generation, image generation)
- **Sharing Capabilities**: Share prompts with specific users or groups
- **Import Functionality**: Import prompts from external sources (for logged-in users)

## Implementation

The Prompt Library is implemented as a dedicated page at `/prompt-library/id` with comprehensive management features.

### Key Components

1. **Prompt Storage**: Secure storage of prompts with metadata
2. **Access Control**: Granular permissions based on user roles
3. **Version History**: Track changes to prompts over time
4. **Analytics**: Monitor prompt usage and performance
5. **Integration API**: Seamlessly integrate prompts into workflows

## Usage

Prompts can be accessed and used through:

- Web interface
- API endpoints
- Integration with other KAI features

## Related Documentation

For more information on specific prompt features, see:
- [Prompt A/B Testing and Segmentation](./prompts/prompt-abtesting-segmentation)
- [Advanced Prompt Features](./prompts/prompt-advanced-features)
- [Prompt Management](./prompts/prompt-management)
- [Prompt Success Tracking](./prompts/prompt-success-tracking)
EOF

      - name: Create changelog.md file
        run: |
          cat > basilakis.github.io/docs/changelog.md << 'EOF'
---
id: changelog
title: "Changelog"
sidebar_label: "Changelog"
---

# Changelog

This file contains all notable changes to the KAI project.

## [Unreleased]

### Added
- Documentation site with Docusaurus
- Comprehensive documentation for all major features
- Sidebar navigation with categorized documentation

### Changed
- Migrated from simple markdown files to a full documentation website
- Improved organization of documentation files

### Fixed
- Fixed various formatting issues in documentation
- Resolved broken links and references

## [1.0.0] - 2023-01-01

### Added
- Initial release of KAI
- Core functionality for materials management
- Basic AI/ML capabilities
- User authentication and authorization
- API endpoints for core features
EOF

      - name: Move prompt files to prompts directory
        run: |
          # Move prompt-related files to the prompts directory
          if [ -f "basilakis.github.io/docs/other/prompt-management.md" ]; then
            mv basilakis.github.io/docs/other/prompt-management.md basilakis.github.io/docs/prompts/
          fi
          if [ -f "basilakis.github.io/docs/other/prompt-abtesting-segmentation.md" ]; then
            mv basilakis.github.io/docs/other/prompt-abtesting-segmentation.md basilakis.github.io/docs/prompts/
          fi
          if [ -f "basilakis.github.io/docs/other/prompt-advanced-features.md" ]; then
            mv basilakis.github.io/docs/other/prompt-advanced-features.md basilakis.github.io/docs/prompts/
          fi
          if [ -f "basilakis.github.io/docs/other/prompt-success-tracking.md" ]; then
            mv basilakis.github.io/docs/other/prompt-success-tracking.md basilakis.github.io/docs/prompts/
          fi

      - name: Update sidebar.js with Prompts section
        run: |
          # Create a new sidebar.js file with the Prompts section
          cat > basilakis.github.io/sidebars.js << 'EOF'
/** @type {import('@docusaurus/plugin-content-docs').SidebarsConfig} */
export default {
  docs: [
    {
      type: "category",
      label: "Getting Started",
      items: ["getting-started/main-readme"]
    },
    {
      type: "category",
      label: "Features",
      items: ["features/moodboard-feature"]
    },
    {
      type: "category",
      label: "AI/ML",
      items: ["ai-ml/rag-system", "ai-ml/ml-documentation"]
    },
    {
      type: "category",
      label: "Materials",
      items: ["materials/enhanced-material-expert"]
    },
    {
      type: "category",
      label: "Agents",
      items: ["agents/recognition-assistant"]
    },
    {
      type: "category",
      label: "Prompts",
      items: ["prompt-library", "prompts/prompt-abtesting-segmentation", "prompts/prompt-advanced-features", "prompts/prompt-management", "prompts/prompt-success-tracking"]
    },
    {
      type: "category",
      label: "Other",
      items: ["other/system-updates-summary", "other/huggingface-integration", "other/mcp-integration", "changelog"]
    }
  ]
};
EOF

      - name: Update docusaurus.config.js with last updated date
        run: |
          # Check if docusaurus.config.js exists
          if [ -f "basilakis.github.io/docusaurus.config.js" ]; then
            # Update the copyright text to include the last updated date
            sed -i 's/copyright: `Copyright © ${new Date().getFullYear()} KAI Project. Built with Docusaurus.`/copyright: `Copyright © ${new Date().getFullYear()} KAI Project. Last updated: ${new Date().toISOString().split("T")[0]}. Built with Docusaurus.`/g' basilakis.github.io/docusaurus.config.js
          else
            echo "docusaurus.config.js not found. Cannot update copyright text."
          fi

      - name: Commit and push changes
        run: |
          cd basilakis.github.io
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update documentation with Prompts section and last updated date"
          git push
