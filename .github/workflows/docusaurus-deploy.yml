name: Build and Deploy Docusaurus Documentation

on:
  workflow_dispatch:
    inputs:
      deploy_message:
        description: 'Message for the deployment PR'
        required: true
        default: 'Update documentation'

jobs:
  build_and_deploy_docs:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Create Docusaurus site
        run: |
          mkdir -p kai-docs-temp
          cd kai-docs-temp
          mkdir -p docs src/css static/img
          
          # Create package.json
          echo '{
            "name": "kai-documentation",
            "version": "1.0.0",
            "private": true,
            "scripts": {
              "docusaurus": "docusaurus",
              "start": "docusaurus start",
              "build": "docusaurus build",
              "swizzle": "docusaurus swizzle",
              "deploy": "docusaurus deploy",
              "clear": "docusaurus clear",
              "serve": "docusaurus serve",
              "write-translations": "docusaurus write-translations",
              "write-heading-ids": "docusaurus write-heading-ids"
            },
            "dependencies": {
              "@docusaurus/core": "3.7.0",
              "@docusaurus/preset-classic": "3.7.0",
              "@mdx-js/react": "3.0.0",
              "clsx": "2.1.0",
              "prism-react-renderer": "2.3.1",
              "react": "18.2.0",
              "react-dom": "18.2.0"
            },
            "devDependencies": {
              "@docusaurus/module-type-aliases": "3.7.0",
              "@docusaurus/types": "3.7.0",
              "typescript": "5.3.3"
            }
          }' > package.json
          
          # Create basic config files
          echo 'const sidebars = {
            docs: [
              {
                type: "category",
                label: "Introduction",
                items: ["introduction"],
              },
              {
                type: "category",
                label: "Getting Started",
                items: ["installation", "configuration"],
              },
              {
                type: "category",
                label: "Features",
                items: ["features-overview"],
              },
              {
                type: "category",
                label: "Prompts",
                items: [
                  "prompt-library",
                  "prompt-abtesting-segmentation",
                  "prompt-advanced-features",
                  "prompt-management",
                  "prompt-success-tracking",
                ],
              },
            ],
          };
          module.exports = sidebars;' > sidebars.js
          
          # Create docusaurus.config.js
          echo 'const config = {
            title: "KAI Documentation",
            tagline: "Documentation for the KAI project",
            favicon: "img/favicon.ico",
            url: "https://basilakis.github.io",
            baseUrl: "/",
            organizationName: "Basilakis",
            projectName: "basilakis.github.io",
            trailingSlash: false,
            onBrokenLinks: "warn",
            onBrokenMarkdownLinks: "warn",
            i18n: {
              defaultLocale: "en",
              locales: ["en"],
            },
            presets: [
              [
                "classic",
                {
                  docs: {
                    sidebarPath: "./sidebars.js",
                    routeBasePath: "/",
                  },
                  blog: false,
                  theme: {
                    customCss: "./src/css/custom.css",
                  },
                },
              ],
            ],
            themeConfig: {
              navbar: {
                title: "KAI Documentation",
                logo: {
                  alt: "KAI Logo",
                  src: "img/logo.svg",
                },
                items: [
                  {
                    href: "https://github.com/Basilakis/kai",
                    label: "GitHub",
                    position: "right",
                  },
                ],
              },
              footer: {
                style: "dark",
                copyright: `Copyright Â© ${new Date().getFullYear()} KAI Project.`,
              },
            },
          };
          module.exports = config;' > docusaurus.config.js
          
          # Create basic CSS
          echo ':root {
            --ifm-color-primary: #2e8555;
          }' > src/css/custom.css
          
          # Create placeholder logo
          echo '<svg width="200" height="200" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
            <rect width="200" height="200" fill="#2e8555" />
            <text x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" font-family="Arial" font-size="72" fill="white">KAI</text>
          </svg>' > static/img/logo.svg
          
          # Create basic docs
          mkdir -p docs
          echo '---
id: introduction
title: "Introduction to KAI"
sidebar_label: "Introduction"
slug: /
---

# Introduction to KAI

Welcome to the KAI documentation.' > docs/introduction.md
          
          echo '---
id: installation
title: "Installation"
sidebar_label: "Installation"
---

# Installation

This page provides instructions for installing the KAI platform.' > docs/installation.md
          
          echo '---
id: configuration
title: "Configuration"
sidebar_label: "Configuration"
---

# Configuration

This page provides instructions for configuring the KAI platform.' > docs/configuration.md
          
          echo '---
id: features-overview
title: "Features Overview"
sidebar_label: "Features Overview"
---

# Features Overview

This page provides an overview of the features available in the KAI platform.' > docs/features-overview.md

      - name: Process readme files
        run: |
          mkdir -p kai-docs-temp/docs
          cd readme
          node process-readme-files.js || echo "Warning: Some readme files may not have been processed correctly"

      - name: Install Docusaurus dependencies
        run: |
          cd kai-docs-temp
          npm install --no-save @docusaurus/core@3.7.0 @docusaurus/preset-classic@3.7.0 @mdx-js/react@3.0.0 clsx@2.1.0 prism-react-renderer@2.3.1 react@18.2.0 react-dom@18.2.0

      - name: Build Docusaurus site
        run: |
          cd kai-docs-temp
          npx docusaurus build

      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh

      - name: Prepare branch
        run: |
          git clone https://x-access-token:${{ secrets.DOCS_DEPLOY_TOKEN }}@github.com/Basilakis/basilakis.github.io.git target-repo
          cd target-repo
          
          # Create gh-pages branch if it doesn't exist
          if ! git ls-remote --heads origin gh-pages | grep gh-pages; then
            git checkout --orphan gh-pages
            git rm -rf .
            echo "# KAI Documentation" > README.md
            git add README.md
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git commit -m "Initial gh-pages branch"
            git push origin gh-pages
          else
            git checkout gh-pages || git checkout -b gh-pages origin/gh-pages
          fi
          
          # Create new branch
          BRANCH_NAME="docs-update-$(date +%Y%m%d%H%M%S)"
          git checkout -b $BRANCH_NAME
          
          # Copy files
          rm -rf * || true
          cp -r ../kai-docs-temp/build/* .
          touch .nojekyll
          
          # Commit and push
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Deploy Documentation: ${{ github.event.inputs.deploy_message }}"
          git push origin $BRANCH_NAME
          
          # Save branch name for next step
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Create PR
        run: |
          cd target-repo
          gh auth login --with-token <<< "${{ secrets.DOCS_DEPLOY_TOKEN }}"
          
          PR_URL=$(gh pr create \
            --title "Deploy Documentation: ${{ github.event.inputs.deploy_message }}" \
            --body "This PR was automatically created by the GitHub Actions workflow to update the documentation site." \
            --repo Basilakis/basilakis.github.io \
            --head $BRANCH_NAME \
            --base gh-pages)
          
          echo "Pull request created: $PR_URL"
          echo "PR_URL=$PR_URL" >> $GITHUB_ENV

      - name: PR Summary
        run: |
          echo "Documentation PR created: $PR_URL"
          echo "Please review and merge the PR to update the documentation site."
