# Default values for Kai Platform Helm chart
# This is a YAML-formatted file.
# Restructured to work with unified templates

# Global configuration shared across all services
global:
  namespace: kai-system-staging
  environment: staging
  registry:
    url: ghcr.io
    organization: kai
  image:
    tag: latest
    pullPolicy: IfNotPresent
  imagePullSecrets:
    - name: github-container-registry
  labels:
    app: kai-platform
    environment: staging
  # Global security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001
  # Global health check defaults
  healthCheck:
    enabled: true
    liveness:
      path: /health
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    readiness:
      path: /health/ready
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 3
  # Global monitoring settings
  monitoring:
    enabled: true
    port: 8080
    path: /metrics
  # Global ConfigMap settings
  configMap:
    enabled: true
    annotations: {}
    commonData:
      TIMEZONE: "UTC"
      LOG_FORMAT: "json"
      ENVIRONMENT: "staging"

# Canary deployment configuration
canary:
  enabled: false
  weight: 10
  analysis:
    interval: 30
    maxWeight: 50
    stepWeight: 10
    threshold:
      success: 95
      latency: 500
  services: []
  metrics:
    prometheus:
      enabled: true
      address: "http://prometheus-server.monitoring:9090"
  autoPromote: true
  autoRollback: true

# Service configurations using unified templates
# These services are now configured through the unified template approach
# See values-staging.yaml and values-production.yaml for service-specific configurations
services: {}
      limits:
        cpu: 2000m
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 1Gi
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 70
    healthCheck:
      enabled: true
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
    configMap:
      enabled: true
      data:
        MOBILE_OPT_MODE: "staging"

  wasm-compiler:
    enabled: true
    component: wasm-compiler
    replicaCount: 1
    image:
      repository: ghcr.io/kai/wasm-compiler
      tag: latest
    service:
      enabled: true
      type: ClusterIP
      port: 80
      targetPort: 8080
    resources:
      limits:
        cpu: 2000m
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 1Gi
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 70
    healthCheck:
      enabled: true
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
    configMap:
      enabled: true
      data:
        WASM_COMPILER_MODE: "staging"

  monitoring:
    enabled: true
    component: monitoring
    replicaCount: 1
    image:
      repository: ghcr.io/kai/monitoring
      tag: latest
    service:
      enabled: true
      type: ClusterIP
      port: 9090
      targetPort: 9090
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
    autoscaling:
      enabled: false
    healthCheck:
      enabled: true
      liveness:
        path: /-/healthy
        port: 9090
      readiness:
        path: /-/ready
        port: 9090
    podDisruptionBudget:
      enabled: false
    configMap:
      enabled: true
      data:
        PROMETHEUS_PORT: "9090"
    health:
      enabled: true
      endpoints:
        - name: "api-server"
          path: "/health"
          port: 80
          initialDelaySeconds: 30
          periodSeconds: 15
          failureThreshold: 3
        - name: "coordinator-service"
          path: "/health"
          port: 80
          initialDelaySeconds: 30
          periodSeconds: 15
          failureThreshold: 3

# Workflow configuration
workflows:
  enabled: true
  templates:
    reconstruction:
      enabled: true

# Backup configuration
backup:
  enabled: true
  retentionCount: 5